<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sky1998.mongo.system.mapper.LogExceptionMapper">
  <resultMap id="BaseResultMap" type="cn.sky1998.mongo.system.domain.LogException">
    <!--@mbg.generated-->
    <!--@Table log_exception-->
    <id column="id" property="id" />
    <result column="account_id" property="accountId" />
    <result column="api_id" property="apiId" />
    <result column="exception_type" property="exceptionType" />
    <result column="exception_level" property="exceptionLevel" />
    <result column="create_time" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, account_id, api_id, exception_type, exception_level, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from log_exception
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from log_exception
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="cn.sky1998.mongo.system.domain.LogException">
    <!--@mbg.generated-->
    insert into log_exception (id, account_id, api_id, exception_type, exception_level, create_time
      )
    values (#{id}, #{accountId}, #{apiId}, #{exceptionType}, #{exceptionLevel}, #{createTime}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.sky1998.mongo.system.domain.LogException">
    <!--@mbg.generated-->
    insert into log_exception
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="apiId != null">
        api_id,
      </if>
      <if test="exceptionType != null">
        exception_type,
      </if>
      <if test="exceptionLevel != null">
        exception_level,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="accountId != null">
        #{accountId},
      </if>
      <if test="apiId != null">
        #{apiId},
      </if>
      <if test="exceptionType != null">
        #{exceptionType},
      </if>
      <if test="exceptionLevel != null">
        #{exceptionLevel},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sky1998.mongo.system.domain.LogException">
    <!--@mbg.generated-->
    update log_exception
    <set>
      <if test="accountId != null">
        account_id = #{accountId},
      </if>
      <if test="apiId != null">
        api_id = #{apiId},
      </if>
      <if test="exceptionType != null">
        exception_type = #{exceptionType},
      </if>
      <if test="exceptionLevel != null">
        exception_level = #{exceptionLevel},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sky1998.mongo.system.domain.LogException">
    <!--@mbg.generated-->
    update log_exception
    set account_id = #{accountId},
      api_id = #{apiId},
      exception_type = #{exceptionType},
      exception_level = #{exceptionLevel},
      create_time = #{createTime}
    where id = #{id}
  </update>
</mapper>